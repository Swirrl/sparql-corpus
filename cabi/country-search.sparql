PREFIX dcterms: <http://purl.org/dc/terms/>
PREFIX bibo: <http://purl.org/ontology/bibo/>
PREFIX foaf: <http://xmlns.com/foaf/0.1/>
PREFIX fao: <http://www.fao.org/countryprofiles/geoinfo/geopolitical/resource/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX vcard: <http://www.w3.org/2006/vcard/ns#>
PREFIX linkeddev: <http://linked-development.org/dev/>
PREFIX dbpo: <http://dbpedia.org/ontology/>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>


CONSTRUCT {
            ?resource a                 bibo:Article ;
                dcterms:title     ?title ;
                dcterms:abstract  ?abstract ;
                dcterms:creator   ?creator ;
                dcterms:subject   ?subject ;
                bibo:uri          ?uri .

      ?subject rdfs:label         ?subjectTitle ;
               dcterms:identifier ?subjectID .

      # Term relationships
      ?subjectParent  skos:narrower       ?subject ;
                      rdfs:label          ?subjectParentLabel ;
                      dcterms:identifier  ?subjectParentID .

      # Coverage
      ?resource dcterms:coverage    ?coverage .
      ?coverage fao:codeISO2        ?coverageISO ;
                fao:codeUN          ?coverageUN ;
                dcterms:identifier  ?coverageID ;
                rdfs:label          ?coverageTitle.

      ?resource dcterms:language    ?language ;
                dcterms:identifier  ?identifier ;
                rdfs:seeAlso        ?document ;
                dcterms:date        ?date .

      ?resource dcterms:publisher     ?publisher .
      ?publisher  foaf:name           ?publisherName ;
                  dcterms:identifier  ?publisherID ;
                  vcard:hasAddress    ?publisherAddress.

      ?publisherAddress vcard:country ?publisherCountry.
    }

          WHERE {
      {    
        SELECT DISTINCT * WHERE {
          GRAPH <http://linked-development.org/graph/r4d> {  
            ?resource a bibo:Article ;
                dcterms:title ?title .

      
            ?resource dcterms:coverage ?coverage .
            ?coverage fao:codeISO2 ?coverageISO .
            
            #FILTER(regex(?coverageISO, 'US', 'i'))
            
          }

        }
        
        LIMIT 10  OFFSET 0
      }

      OPTIONAL { ?resource dcterms:abstract ?abstract }

      # Creators
      # Handle cases where Creator is directly attached (Eldis), or through a blank node (R4D)
      OPTIONAL {
        {
          ?resource dcterms:creator ?creator .
        } UNION {
          ?resource dcterms:creator/foaf:name ?creator .
        }
        FILTER(isLiteral(?creator))
      }

      # Subjects
      OPTIONAL {
        ?resource dcterms:subject ?subject .
        ?subject rdfs:label ?subjectTitle .
        OPTIONAL {
            ?subject dcterms:identifier ?subjectID .
        }
        OPTIONAL {
          ?subjectParent skos:narrower ?subject
          # Uncomment out the line below to search up the category tree and give all the required steps for building a category path
          # This is expensive, so unless there are use-cases drawing on the category tree from the API we may want to leave it out
          # OPTION (transitive, t_max(4), t_in(?subject), t_out(?subjectParent), t_step("step_no") as ?level)
          .
          ?subjectParent rdfs:label ?subjectParentLabel .
          OPTIONAL { ?subjectParent dcterms:identifier ?subjectParentID . }
        }
      }

      # Coverage
      OPTIONAL {
        ?resource dcterms:coverage ?coverage .
        # Handle for different ways in which coverage may be labelled.
        {
          ?coverage rdfs:label ?coverageTitle
        }
        UNION
        {
          ?coverage fao:nameList ?coverageTitle .
          FILTER(lang(?coverageTitle) = "en" || lang(?coverageTitle) = "")
        }
        OPTIONAL { ?coverage dcterms:identifier ?coverageID }
        OPTIONAL { ?coverage fao:codeISO2 ?coverageISO }
        OPTIONAL { ?coverage fao:codeUN ?coverageUN }
      }

      # Language
      OPTIONAL { ?resource dcterms:language ?language }
      # Identifiers
      OPTIONAL { ?resource dcterms:identifier ?identifier }
      # SeeAlso
      OPTIONAL { ?resource rdfs:seeAlso ?document }
      # Date
      OPTIONAL { ?resource dcterms:date ?date }
      # Publisher Information
      OPTIONAL {
        ?resource dcterms:publisher ?publisher .
        OPTIONAL { ?publisher foaf:name ?publisherName }
      }
      # URI to the document
      OPTIONAL {
        ?resource bibo:uri ?uri
      }

    }
